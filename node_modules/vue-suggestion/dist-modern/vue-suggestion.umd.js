(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["vue-suggestion"] = factory();
	else
		root["vue-suggestion"] = factory();
})((typeof self !== 'undefined' ? self : this), function() {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 679:
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// addapted from the document.currentScript polyfill by Adam Miller
// MIT license
// source: https://github.com/amiller-gh/currentScript-polyfill

// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(typeof self !== 'undefined' ? self : this, function () {
  function getCurrentScript () {
    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')
    // for chrome
    if (!descriptor && 'currentScript' in document && document.currentScript) {
      return document.currentScript
    }

    // for other browsers with native support for currentScript
    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {
      return document.currentScript
    }
  
    // IE 8-10 support script readyState
    // IE 11+ & Firefox support stack trace
    try {
      throw new Error();
    }
    catch (err) {
      // Find the second match for the "at" string to get file src url from stack.
      var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig,
        ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig,
        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),
        scriptLocation = (stackDetails && stackDetails[1]) || false,
        line = (stackDetails && stackDetails[2]) || false,
        currentLocation = document.location.href.replace(document.location.hash, ''),
        pageSource,
        inlineScriptSourceRegExp,
        inlineScriptSource,
        scripts = document.getElementsByTagName('script'); // Live NodeList collection
  
      if (scriptLocation === currentLocation) {
        pageSource = document.documentElement.outerHTML;
        inlineScriptSourceRegExp = new RegExp('(?:[^\\n]+?\\n){0,' + (line - 2) + '}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*', 'i');
        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();
      }
  
      for (var i = 0; i < scripts.length; i++) {
        // If ready state is interactive, return the script tag
        if (scripts[i].readyState === 'interactive') {
          return scripts[i];
        }
  
        // If src matches, return the script tag
        if (scripts[i].src === scriptLocation) {
          return scripts[i];
        }
  
        // If inline source matches, return the script tag
        if (
          scriptLocation === currentLocation &&
          scripts[i].innerHTML &&
          scripts[i].innerHTML.trim() === inlineScriptSource
        ) {
          return scripts[i];
        }
      }
  
      // If no match, return null
      return null;
    }
  };

  return getCurrentScript
}));


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "";
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "VueSuggestion": () => (/* reexport */ vue_suggestion),
  "default": () => (/* binding */ entry_lib),
  "install": () => (/* reexport */ install)
});

;// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
/* eslint-disable no-var */
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var currentScript = window.document.currentScript
  if (true) {
    var getCurrentScript = __webpack_require__(679)
    currentScript = getCurrentScript()

    // for backward compatibility, because previously we directly included the polyfill
    if (!('currentScript' in document)) {
      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })
    }
  }

  var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
  if (src) {
    __webpack_require__.p = src[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ const setPublicPath = (null);

;// CONCATENATED MODULE: ./src/utils.js
const allProps = [{
  name: 'itemTemplate',
  type: 'Vue component',
  default: null,
  description: 'Template for item in suggestion list',
  inDemo: false
}, {
  name: 'items',
  type: Array,
  default: [],
  description: 'Suggestion array, should be updated dynamically after `onInputChange()`',
  inDemo: false
}, {
  name: 'setLabel',
  type: Function,
  default: item => item,
  description: 'Value of chosen input, be shown in the input`',
  inDemo: false
}, {
  name: 'loading',
  type: Boolean,
  default: false,
  description: '!!',
  inDemo: false
}, {
  name: 'minLen',
  type: Number,
  default: 2,
  description: 'Minimum number of characters inputted to start searching',
  inDemo: false
}, {
  name: 'styleClasses',
  type: [String, Array, Object],
  default: '',
  description: 'Custom classes for the wrapper',
  inDemo: false
}, {
  name: 'inputOptions.maxlength',
  type: Number,
  default: 100,
  description: 'Native input `maxlength` attribute',
  inDemo: false
}, {
  name: 'inputOptions.type',
  type: String,
  default: 'search',
  description: 'Native input `type` attribute',
  inDemo: false
}, {
  name: 'inputOptions.placeholder',
  type: String,
  default: '',
  description: 'Placeholder of the input',
  inDemo: false
}, {
  name: 'inputOptions.styleClasses',
  type: [String, Array, Object],
  default: '',
  description: 'Custom classes for the input',
  inDemo: false
}, {
  name: 'inputOptions.wrapperStyleClasses',
  type: [String, Array, Object],
  default: '',
  description: 'Custom classes for the input',
  inDemo: false
}, {
  name: 'suggestionOptions.listStyleClasses',
  type: [String, Array, Object],
  default: '',
  description: 'Custom classes for the input',
  inDemo: false
}, {
  name: 'suggestionOptions.groupStyleClasses',
  type: [String, Array, Object],
  default: '',
  description: 'Custom classes for the input',
  inDemo: false
}, {
  name: 'suggestionOptions.groupHeaderStyleClasses',
  type: [String, Array, Object],
  default: '',
  description: 'Custom classes for the input',
  inDemo: false
}, {
  name: 'suggestionOptions.groupHeaderStyleClasses',
  type: [String, Array, Object],
  default: '',
  description: 'Custom classes for the input',
  inDemo: false
}, {
  name: 'suggestionOptions.groupHeaderStyleClasses',
  type: [String, Array, Object],
  default: '',
  description: 'Custom classes for the input',
  inDemo: false
}, {
  name: 'suggestionOptions.itemWrapperStyleClasses',
  type: [String, Array, Object],
  default: '',
  description: 'Custom classes for the input',
  inDemo: false
}, {
  name: 'suggestionOptions.itemStyleClasses',
  type: [String, Array, Object],
  default: '',
  description: 'Custom classes for the input',
  inDemo: false
}, {
  name: 'disabled',
  type: Boolean,
  default: false,
  description: 'Disable the input',
  inDemo: false
}];
const defaultOptions = [...allProps].reduce((prv, crr) => {
  if (crr.name.includes('.')) {
    const [key, nestedKey] = crr.name.split('.');

    if (prv[key]) {
      Object.assign(prv[key], {
        [nestedKey]: crr.default
      });
    } else {
      Object.assign(prv, {
        [key]: {
          [nestedKey]: crr.default
        }
      });
    }
  } else {
    Object.assign(prv, {
      [crr.name]: crr.default
    });
  }

  return prv;
}, {});
/* harmony default export */ const utils = ({
  options: { ...defaultOptions
  }
});
;// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"494ca21c-vue-loader-template"}!./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ruleSet[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/vue-suggestion.vue?vue&type=template&id=23d887c7&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:[_vm.styleClasses, 'vue-suggestion']},[_c('div',{class:[{ vs__selected: _vm.value }, _vm.inputOptions.wrapperStyleClasses, 'vs__input-group']},[((_vm.inputOptions.type)==='checkbox')?_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.searchText),expression:"searchText"}],class:[_vm.inputOptions.styleClasses, 'vs__input'],attrs:{"placeholder":_vm.inputOptions.placeholder,"disabled":_vm.disabled,"maxlength":_vm.inputOptions.maxlength,"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.searchText)?_vm._i(_vm.searchText,null)>-1:(_vm.searchText)},on:{"blur":_vm.blur,"focus":_vm.focus,"input":_vm.inputChange,"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.keyEnter.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"up",38,$event.key,["Up","ArrowUp"])){ return null; }$event.preventDefault();return _vm.keyUp.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"down",40,$event.key,["Down","ArrowDown"])){ return null; }$event.preventDefault();return _vm.keyDown.apply(null, arguments)}],"change":function($event){var $$a=_vm.searchText,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.searchText=$$a.concat([$$v]))}else{$$i>-1&&(_vm.searchText=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.searchText=$$c}}}}):((_vm.inputOptions.type)==='radio')?_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.searchText),expression:"searchText"}],class:[_vm.inputOptions.styleClasses, 'vs__input'],attrs:{"placeholder":_vm.inputOptions.placeholder,"disabled":_vm.disabled,"maxlength":_vm.inputOptions.maxlength,"type":"radio"},domProps:{"checked":_vm._q(_vm.searchText,null)},on:{"blur":_vm.blur,"focus":_vm.focus,"input":_vm.inputChange,"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.keyEnter.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"up",38,$event.key,["Up","ArrowUp"])){ return null; }$event.preventDefault();return _vm.keyUp.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"down",40,$event.key,["Down","ArrowDown"])){ return null; }$event.preventDefault();return _vm.keyDown.apply(null, arguments)}],"change":function($event){_vm.searchText=null}}}):_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.searchText),expression:"searchText"}],class:[_vm.inputOptions.styleClasses, 'vs__input'],attrs:{"placeholder":_vm.inputOptions.placeholder,"disabled":_vm.disabled,"maxlength":_vm.inputOptions.maxlength,"type":_vm.inputOptions.type},domProps:{"value":(_vm.searchText)},on:{"blur":_vm.blur,"focus":_vm.focus,"input":[function($event){if($event.target.composing){ return; }_vm.searchText=$event.target.value},_vm.inputChange],"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.keyEnter.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"up",38,$event.key,["Up","ArrowUp"])){ return null; }$event.preventDefault();return _vm.keyUp.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"down",40,$event.key,["Down","ArrowDown"])){ return null; }$event.preventDefault();return _vm.keyDown.apply(null, arguments)}]}}),_vm._t("input-append")],2),(_vm.loading)?_vm._t("loading",function(){return [_c('div',{staticClass:"vs__loading"},[_vm._v("Loading...")])]}):(_vm.showList)?_vm._t("suggestionList",function(){return [_c('div',{class:[_vm.suggestionOptions.listStyleClasses, 'vs__list']},_vm._l((_vm.itemGroups),function(group,index){return _c('div',{key:index,class:_vm.suggestionOptions.groupStyleClasses},[(_vm.itemGroups.length > 1 || group.header)?_c('div',{class:[_vm.suggestionOptions.groupHeaderStyleClasses, 'vs__group-header']},[_vm._v(" "+_vm._s(group.header)+" ")]):_vm._e(),_vm._l((group.items),function(item){return _c('div',{key:item.vsItemIndex,class:[
            { 'vs__item-active': item.vsItemIndex === _vm.cursor },
            _vm.suggestionOptions.itemWrapperStyleClasses,
            'vs__list-item' ],on:{"click":function($event){return _vm.selectItem(item)},"mouseover":function($event){_vm.cursor = item.vsItemIndex}}},[_c(_vm.itemTemplate,{tag:"div",class:_vm.suggestionOptions.itemStyleClasses,attrs:{"item":item}})],1)})],2)}),0)]}):_vm._e()],2)}
var staticRenderFns = []


;// CONCATENATED MODULE: ./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib/index.js??clonedRuleSet-78[0].rules[0].use[1]!./node_modules/cache-loader/dist/cjs.js??ruleSet[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/vue-suggestion.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


function getDefault(key) {
  const value = utils.options[key];

  if (typeof value === 'undefined') {
    return utils.options[key];
  }

  return value;
}

/* harmony default export */ const vue_suggestionvue_type_script_lang_js_ = ({
  name: 'VueSuggestion',
  props: {
    value: {
      type: [Object, String, Number],
      default: null
    },
    itemTemplate: {
      type: Object,
      default: () => getDefault('itemTemplate')
    },
    minLen: {
      type: Number,
      default: () => getDefault('minLen')
    },
    setLabel: {
      type: Function,
      default: () => getDefault('setLabel')
    },
    items: {
      type: Array,
      default: () => getDefault('items')
    },
    disabled: {
      type: Boolean,
      default: () => getDefault('disabled')
    },
    loading: {
      type: Boolean,
      default: () => getDefault('loading')
    },
    styleClasses: {
      type: [Object, String, Number],
      default: () => getDefault('styleClasses')
    },
    inputOptions: {
      type: Object,
      default: () => getDefault('inputOptions')
    },
    suggestionOptions: {
      type: Object,
      default: () => getDefault('suggestionOptions')
    }
  },

  data() {
    return {
      searchText: '',
      showList: false,
      cursor: 0
    };
  },

  computed: {
    itemGroups() {
      return this.items.reduce((prv, crr, index) => {
        const groupName = crr.suggestionGroup || '';
        const item = { ...crr,
          vsItemIndex: index
        };
        const foundGroup = prv.find(gr => gr.header === groupName);

        if (foundGroup) {
          foundGroup.items.push(item);
        } else {
          prv.push({
            header: groupName,
            items: [item]
          });
        }

        return prv;
      }, []);
    }

  },
  watch: {
    value: {
      handler(value) {
        if (!value) {
          return;
        }

        this.searchText = this.setLabel(value);
      },

      deep: true
    },
    // eslint-disable-next-line func-names
    'items.length': function () {
      // Items might be changed from Promise after searching
      // So we need the check if we should show the suggestion list
      this.showList = this.isAbleToShowList();
    }
  },

  created() {
    this.checkMissingProps();
  },

  mounted() {
    if (this.value) {
      this.searchText = this.setLabel(this.value);
    }
  },

  methods: {
    inputChange() {
      this.showList = this.isAbleToShowList();
      this.cursor = 0;
      this.$emit('changed', this.searchText);
    },

    isAbleToShowList() {
      return (this.searchText || '').length >= this.minLen && this.items.length > 0;
    },

    checkMissingProps() {
      if (!this.itemTemplate) {
        console.warn('You need to pass `template` as the suggestion list item template');
      }
    },

    focus() {
      this.$emit('focus', this.searchText);
      this.showList = this.isAbleToShowList();
    },

    blur() {
      this.$emit('blur', this.searchText); // set timeout for the click event to work

      setTimeout(() => {
        this.showList = false;
      }, 200);
    },

    selectItem({
      vsItemIndex,
      ...item
    } = {}) {
      if (item) {
        this.searchText = this.setLabel(item);
        this.$emit('selected', item);
      }

      this.$emit('input', item);
    },

    keyUp() {
      this.$emit('key-up', this.searchText);

      if (this.cursor > 0) {
        this.cursor -= 1;
      }
    },

    keyDown() {
      this.$emit('key-down', this.searchText);

      if (this.cursor < this.items.length - 1) {
        this.cursor += 1;
      }
    },

    keyEnter() {
      if (this.showList && this.items[this.cursor]) {
        this.selectItem(this.items[this.cursor]);
        this.showList = false;
      }

      this.$emit('enter', this.items[this.cursor]);
    }

  }
});
;// CONCATENATED MODULE: ./src/components/vue-suggestion.vue?vue&type=script&lang=js&
 /* harmony default export */ const components_vue_suggestionvue_type_script_lang_js_ = (vue_suggestionvue_type_script_lang_js_); 
;// CONCATENATED MODULE: ./node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
        injectStyles.call(
          this,
          (options.functional ? this.parent : this).$root.$options.shadowRoot
        )
      }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

;// CONCATENATED MODULE: ./src/components/vue-suggestion.vue



;


/* normalize component */

var component = normalizeComponent(
  components_vue_suggestionvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ const vue_suggestion = (component.exports);
;// CONCATENATED MODULE: ./src/index.js


function install(app, customOptions = {}) {
  if (install.installed) return;
  install.installed = true;
  const {
    suggestionOptions: customSuggestionOptions,
    inputOptions: customInputOptions,
    ...otherCustomOptions
  } = customOptions;
  const {
    suggestionOptions: defaultSuggestionOptions,
    inputOptions: defaultInputOptions,
    ...otherDefaultOptions
  } = defaultOptions;
  utils.options = {
    inputOptions: { ...defaultInputOptions,
      ...customInputOptions
    },
    suggestionOptions: { ...defaultSuggestionOptions,
      ...customSuggestionOptions
    },
    ...otherDefaultOptions,
    ...otherCustomOptions
  };
  app.component('vue-suggestion', vue_suggestion);
}

const src_plugin = {
  install
}; // Auto-install

let GlobalVue = null;

if (typeof window !== 'undefined') {
  GlobalVue = window.Vue;
} else if (typeof __webpack_require__.g !== 'undefined') {
  GlobalVue = __webpack_require__.g.Vue;
}

if (GlobalVue) {
  GlobalVue.use(src_plugin);
}

/* harmony default export */ const src_0 = (src_plugin);
;// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ const entry_lib = (src_0);


})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=vue-suggestion.umd.js.map